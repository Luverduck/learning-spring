plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'springcore'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

configurations {
	compileOnly { // 컴파일 타임에만 포함할 의존성
		extendsFrom annotationProcessor // annotationProcessor를 추가
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// JSR-330 (Dependency Injection for Java) 표준 구현 라이브러리를 의존성으로 추가
	// - javax.inject.Provider를 사용하기 위함
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'

	// 스프링의 웹 개발을 위한 라이브러리를 의존성으로 추가
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Lombok 라이브러리 추가 시작
	compileOnly 'org.projectlombok:lombok' // 컴파일 타임에만 Lombok 포함
	annotationProcessor 'org.projectlombok:lombok' // Lombok의 어노테이션 프로세서 활성화
	testCompileOnly 'org.projectlombok:lombok' // 테스트의 컴파일 타임에만 롬복 활성화
	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트에서 사용할 Lombok의 어노테이션 프로세서 활성화
	// Lombok 라이브러리 추가 끝
}

tasks.named('test') {
	useJUnitPlatform()
}
